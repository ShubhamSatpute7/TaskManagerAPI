@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
    <title>Task Manager</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 2rem auto;
        }
        ul { padding: 0; list-style-type: none; }
        li {
            padding: 0.5rem;
            border-bottom: 1px solid #ddd;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        li.completed span.title {
            text-decoration: line-through;
            color: gray;
        }
        button {
            margin-left: 0.5rem;
        }
        .edit-form {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }
        .edit-form input[type="text"] {
            flex: 1;
        }
        .task-actions {
            display: flex;
            gap: 0.5rem;
        }
    </style>
</head>
<body>
    <h1>Tasks</h1>

    <input id="newTitle" placeholder="New task title" />
    <button onclick="addTask()">Add Task</button>

    <ul id="taskList"></ul>

    <script>
        async function loadTasks() {
            const res = await fetch('/api/tasks');
            const tasks = await res.json();

            const list = document.getElementById('taskList');
            list.innerHTML = '';

            tasks.forEach(task => {
                const li = document.createElement('li');
                li.className = task.isComplete ? 'completed' : '';

                const titleSpan = document.createElement('span');
                titleSpan.className = 'title';
                titleSpan.textContent = task.title;

                // Checkbox to toggle completion
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.checked = task.isComplete;
                checkbox.onchange = () => toggleComplete(task);

                // Edit and Delete buttons
                const actionsDiv = document.createElement('div');
                actionsDiv.className = 'task-actions';

                const editBtn = document.createElement('button');
                editBtn.textContent = 'Edit';
                editBtn.onclick = () => showEditForm(task, li);

                const deleteBtn = document.createElement('button');
                deleteBtn.textContent = 'Delete';
                deleteBtn.onclick = () => deleteTask(task.id);

                actionsDiv.appendChild(editBtn);
                actionsDiv.appendChild(deleteBtn);

                li.appendChild(checkbox);
                li.appendChild(titleSpan);
                li.appendChild(actionsDiv);

                list.appendChild(li);
            });
        }

        async function addTask() {
            const titleInput = document.getElementById('newTitle');
            const title = titleInput.value.trim();
            if (!title) {
                alert('Title required');
                return;
            }

            await fetch('/api/tasks', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ title })
            });

            titleInput.value = '';
            loadTasks();
        }

        async function deleteTask(id) {
            if (!confirm('Are you sure you want to delete this task?')) return;

            await fetch(`/api/tasks/${id}`, {
                method: 'DELETE'
            });
            loadTasks();
        }

        function showEditForm(task, listItem) {
            // Clear existing content
            listItem.innerHTML = '';

            // Input to edit title
            const input = document.createElement('input');
            input.type = 'text';
            input.value = task.title;
            input.style.flex = '1';

            // Checkbox to toggle complete status
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.checked = task.isComplete;

            // Save button
            const saveBtn = document.createElement('button');
            saveBtn.textContent = 'Save';
            saveBtn.onclick = async () => {
                const updatedTask = {
                    id: task.id,
                    title: input.value.trim(),
                    description: task.description,
                    dueDate: task.dueDate,
                    isComplete: checkbox.checked
                };

                if (!updatedTask.title) {
                    alert('Title required');
                    return;
                }

                await fetch(`/api/tasks/${task.id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(updatedTask)
                });

                loadTasks();
            };

            // Cancel button
            const cancelBtn = document.createElement('button');
            cancelBtn.textContent = 'Cancel';
            cancelBtn.onclick = loadTasks;

            // Append all
            listItem.appendChild(checkbox);
            listItem.appendChild(input);
            listItem.appendChild(saveBtn);
            listItem.appendChild(cancelBtn);
        }

        async function toggleComplete(task) {
            const updatedTask = {
                ...task,
                isComplete: !task.isComplete
            };

            await fetch(`/api/tasks/${task.id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(updatedTask)
            });

            loadTasks();
        }

        loadTasks();
    </script>
</body>
</html>